(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{254:function(e,t,s){"use strict";s.r(t);var a=s(17),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"扩展性原则和模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展性原则和模式"}},[e._v("#")]),e._v(" 扩展性原则和模式")]),e._v(" "),s("h2",{attrs:{id:"扩展性实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展性实现"}},[e._v("#")]),e._v(" 扩展性实现")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("VS Code有着非常丰富的扩展性模型和生产插件的方法。不过我们没有给插件作者提供直接操作底层UI DOM的方法。在VS Code开发中，我们会不断优化底层web技术的使用使其达到高可用、高响应的状态，我们会随着这些技术和产品的演进继续调整DOM的使用方式。为了维持其性能和兼容性，插件在独立的进程中运行同时阻止插件作者直接操作DOM，这样有助于保持不同编程语言实现的插件一致性，VS Code还为很多场景提供了一整套内置的UI组件，如IntelliSense，这样一来，插件开发者也就不需要重复造轮子了。")]),e._v(" "),s("p",[e._v("这些规定乍看可能比较严格，我们也一直在寻找更好的方法改进我们的扩展性，增加插件的能力，期待聆听你的反馈和意见。")]),e._v(" "),s("h2",{attrs:{id:"核心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[e._v("#")]),e._v(" 核心")]),e._v(" "),s("hr"),e._v(" "),s("h4",{attrs:{id:"插件独立-稳定性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件独立-稳定性"}},[e._v("#")]),e._v(" 插件独立 - 稳定性")]),e._v(" "),s("p",[e._v("插件虽好但是它会影响到VS Code的启动性能和整体稳定性，所以VS Code为插件的加载和执行单独开辟了一条进程，"),s("code",[e._v("extension host process")]),e._v("，这样一来出错的插件就不会影响到VS Code，尤其是在VS Code刚启动的时候。")]),e._v(" "),s("p",[e._v("这样的架构确保了终端用户能控制住VS Code：不论什么时候，用户都可以打开、输入、保存文件，不管插件在做什么VS Code都需要保证UI的及时响应。")]),e._v(" "),s("p",[s("code",[e._v("extension host")]),e._v("是一个Node.js进程，并将VS Code API暴露给了插件开发者。VS Code在"),s("code",[e._v("extension host")]),e._v("下为插件提供了debug支持。")]),e._v(" "),s("h4",{attrs:{id:"插件激活时机-性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件激活时机-性能"}},[e._v("#")]),e._v(" 插件激活时机 - 性能")]),e._v(" "),s("p",[e._v("VS Code会尽可能晚地加载插件，为了达到控制内存的目的，如果插件在会话期间没有用到就不会加载。为了帮助开发者理解插件的懒加载机制，VS Code提供了称之为"),s("code",[e._v("activation events")]),e._v("的事件表。激活事件定义了特定的触发时机，比如：一个Markdown辅助插件只需要在用户打开Markdown文件的时候启动。")]),e._v(" "),s("h4",{attrs:{id:"extension-manifest（插件配置清单）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extension-manifest（插件配置清单）"}},[e._v("#")]),e._v(" Extension Manifest（插件配置清单）")]),e._v(" "),s("p",[e._v("为了激活一个懒加载插件，VS Code需要一份插件的描述文件，"),s("code",[e._v("插件清单（extension manifest）")]),e._v("是一份添加了"),s("RouterLink",{attrs:{to:"/extensibility-reference/extension-manifest.html"}},[e._v("VS Code特定字段")]),e._v("的"),s("code",[e._v("package.json")]),e._v("文件，其中包含了激活事件的配置位置。VS Code提供了一系列插件可以使用的"),s("code",[e._v("发布内容配置（contribution points）")]),e._v("。例如，想给VS Code添加一个指令，则需要你在名为"),s("code",[e._v("commands")]),e._v("的配置点中定义指令。一旦你在"),s("code",[e._v("package.json")]),e._v("中定义好了配置。VS Code 在启动时会读取、解析这个清单然后准备相应的UI界面。")],1),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("译者注")]),e._v(" "),s("p",[e._v("定义在发布内容配置中的有些东西会暴露在用户的"),s("strong",[e._v("配置")]),e._v("中，用户可以通过setting.json等文件修改你的插件行为，因此叫做这个略拗口的名字——发布内容配置。"),s("strong",[e._v("配置点")]),e._v("则是构成发布内容配置的一个个键值对。")])]),e._v(" "),s("p",[e._v("查看更多的"),s("RouterLink",{attrs:{to:"/extensibility-reference/contribution-points.html"}},[e._v("package.json 发布内容配置")])],1),e._v(" "),s("h4",{attrs:{id:"扩展性api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展性api"}},[e._v("#")]),e._v(" 扩展性API")]),e._v(" "),s("p",[e._v("查看"),s("RouterLink",{attrs:{to:"/extensibility-reference/vscode-api.html"}},[e._v("扩展性API")]),e._v("取得更多细节。")],1),e._v(" "),s("p",[e._v("为了修改和自定义UI，VS Code采用了强有力的Web技术（HTML，CSS）。你可以很轻松地给DOM添加节点，然后使用CSS定义它的样式。不过，这个技术也并非没有缺陷，尤其是在实现像VS Code这样复杂的应用时。")]),e._v(" "),s("p",[e._v("易变的界面结构和紧密绑定到UI上的插件一起工作时可能会导致崩溃，因此VS Code采用了预防性的措施避免这种问题——不提供操作DOM的API。")]),e._v(" "),s("h4",{attrs:{id:"基于协议的插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于协议的插件"}},[e._v("#")]),e._v(" 基于协议的插件")]),e._v(" "),s("p",[e._v("在VS Code中比较常见的场景是插件在各自独立的进程中运行，然后通过特定协议与VS Code进行通信，比如：语言服务器和调试适配器。")]),e._v(" "),s("p",[e._v("一般来说，这个通信协议使用 stdin/stdout 标准和JSON载荷进行消息传输。")]),e._v(" "),s("p",[e._v("使用分离的进程有助于插件建立独立的边界，维持VS Code核心编辑器进程的稳定性，同时也有助于插件开发人员为特定的插件实现选择合适的编程语言。")]),e._v(" "),s("h2",{attrs:{id:"扩展性模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展性模式"}},[e._v("#")]),e._v(" 扩展性模式")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("扩展性API遵循下列模式。")]),e._v(" "),s("h4",{attrs:{id:"promises（异步）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promises（异步）"}},[e._v("#")]),e._v(" Promises（异步）")]),e._v(" "),s("p",[e._v("VS Code API完全采用了promise的实现。对于插件来说允许任何promise形式的返回格式，如ES6，WinJS，A+等。")]),e._v(" "),s("p",[e._v("一个promise库需要它的API使用"),s("code",[e._v("Thenable")]),e._v("类型来表达，"),s("code",[e._v("Thenable")]),e._v("类型代表了一种通用特性的实现——then方法。")]),e._v(" "),s("p",[e._v("大多数时候promise是一个可选项，VS Code调用插件之后，它能直接处理正常的返回结果也能处理"),s("code",[e._v("Thenable")]),e._v("的结果类型。当promise是可选的API返回结果时，API会在返回类型中用"),s("code",[e._v("Thenable")]),e._v("表示。")]),e._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("provideNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Thenable"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("number")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h4",{attrs:{id:"cancellation-tokens（取消式令牌）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cancellation-tokens（取消式令牌）"}},[e._v("#")]),e._v(" Cancellation Tokens（取消式令牌）")]),e._v(" "),s("p",[e._v("有些事件可能从不稳定的变化状态开始，而随着状态变化这一事件最后肯能被取消了。比如：IntelliSense（智能补全）被触发后，用户持续输入的行为使得这一操作最终被取消了。")]),e._v(" "),s("p",[e._v("API也为这种行为提供了解决方案，你可以通过"),s("code",[e._v("CancellationToken")]),e._v("检查取消的状态（"),s("code",[e._v("isCancellationRequested")]),e._v("）或者当"),s("em",[e._v("取消")]),e._v("发生时得到通知（"),s("code",[e._v("onCancellationRequested")]),e._v("）。取消式令牌通常是API函数的最后一个（可选）参数。")]),e._v(" "),s("h4",{attrs:{id:"disposables（释放器）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disposables（释放器）"}},[e._v("#")]),e._v(" Disposables（释放器）")]),e._v(" "),s("p",[e._v("VS Code API使用了"),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Dispose_pattern",target:"_blank",rel:"noopener noreferrer"}},[e._v("释放器模式"),s("OutboundLink")],1),e._v("，这个模式被用于事件侦听，命令，UI交互和各类语言配置上。")]),e._v(" "),s("p",[e._v("例如："),s("code",[e._v("setStatusBarMessage(value: string)")]),e._v("事件返回一个"),s("code",[e._v("Disposable")]),e._v("对象，这个对象最终调用"),s("code",[e._v("dispose")]),e._v("方法移除message。")]),e._v(" "),s("h4",{attrs:{id:"events（事件）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#events（事件）"}},[e._v("#")]),e._v(" Events（事件）")]),e._v(" "),s("p",[e._v("事件在API中被暴露为函数，当你订阅一个事件侦听器时绑定。事件侦听器调用后会返回一个"),s("code",[e._v("Disposable")]),e._v("，它会在dispose触发后，移除事件侦听器。")]),e._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[e._v("listener")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[e._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"It happened"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 开始侦听")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" subscription "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" fsWatcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("onDidDelete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("listener"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 你的代码")]),e._v("\n\nsubscription"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("dispose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 停止侦听")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("事件的命名规则遵循"),s("code",[e._v("on[Will | Did] 动词 + 名词")]),e._v("的形式。通过"),s("code",[e._v("onWill")]),e._v("表示将要发生，"),s("code",[e._v("onDid")]),e._v("表示已经发生，"),s("code",[e._v("动词")]),e._v("表示行为，"),s("code",[e._v("名词")]),e._v("指代上下文或目标。")]),e._v(" "),s("p",[e._v("举个栗子："),s("code",[e._v("window.onDidChangeActiveTextEditor")]),e._v("中，激活的编辑器（ActiveTextEditor："),s("code",[e._v("名词")]),e._v("）变动（change："),s("code",[e._v("动词")]),e._v("）后（"),s("code",[e._v("onDid")]),e._v("）会触发事件。")]),e._v(" "),s("h2",{attrs:{id:"严格null检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#严格null检查"}},[e._v("#")]),e._v(" 严格null检查")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("VS CodeAPI使用"),s("code",[e._v("undefined")]),e._v("和"),s("code",[e._v("null")]),e._v("的Typescript类型，同样也支持"),s("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/pull/7140",target:"_blank",rel:"noopener noreferrer"}},[e._v("严格null检查"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"在插件中使用node-js模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在插件中使用node-js模块"}},[e._v("#")]),e._v(" 在插件中使用Node.js模块")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("就像一个node模块，你可以把依赖添加到"),s("code",[e._v("pacakge.json")]),e._v("中的"),s("code",[e._v("dependencies")]),e._v("字段中去，甚至把VS Code"),s("a",{attrs:{href:"https://code.visualstudio.com/docs/extensionAPI/extension-manifest#_useful-node-modules",target:"_blank",rel:"noopener noreferrer"}},[e._v("专用的node模块包"),s("OutboundLink")],1),e._v("加进去。")]),e._v(" "),s("p",[e._v("安装和打包")]),e._v(" "),s("p",[e._v("VS Code不会在用户安装插件时，把你的依赖安装起来，所以你需要在发布之前使用"),s("code",[e._v("npm install")]),e._v("。插件的发布包中包含着所有的依赖。使用"),s("code",[e._v("vsce ls")]),e._v("命令列出"),s("code",[e._v("vsce")]),e._v("之后会包含的依赖包。")]),e._v(" "),s("p",[e._v("使用"),s("code",[e._v(".vscodeignore")]),e._v("文件排除掉已经在你插件依赖中的包。查看"),s("code",[e._v("vsce")]),e._v("发布工具，查看更多"),s("a",{attrs:{href:"https://code.visualstudio.com/docs/extensions/publish-extension#_vscodeignore",target:"_blank",rel:"noopener noreferrer"}},[e._v("相关细节"),s("OutboundLink")],1),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"faq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[e._v("#")]),e._v(" FAQ")]),e._v(" "),s("hr"),e._v(" "),s("p",[s("strong",[e._v("问：我能在插件中使用原生Node.js模块吗？")])]),e._v(" "),s("p",[e._v("答：如果你在Windows平台上开发了一个原生模块插件，当你发布插件时，Windows上的编译器会将原生依赖编译进去，这样一来，macOS或者Linux的用户就用不了插件了。")]),e._v(" "),s("p",[e._v("目前这个问题的唯一方案是，将4个平台（Windows x86和x64，Linux，macOS）的所有二进制文件包含进来，并让这些代码在不同平台上动态加载。")]),e._v(" "),s("p",[e._v("我们不建议插件使用原生npm模块，因为原生模块会和插件打包，每当VS Code更新，这个包会随VS Code内置的node.js版本重新编译。你能在开发者工具(帮助 > 打开开发者工具)中运行"),s("code",[e._v("process.versions")]),e._v("找到Node.js和模块版本。")]),e._v(" "),s("h2",{attrs:{id:"下一步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下一步"}},[e._v("#")]),e._v(" 下一步")]),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/extensibility-reference/extension-manifest.html"}},[e._v("插件配置清单")]),e._v(" - VS Code的专有package.json文件参考")],1),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/extensibility-reference/contribution-points.html"}},[e._v("发布内容配置点")]),e._v(" - VS Code属性表参考")],1),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/extensibility-reference/activation-events.html"}},[e._v("激活事件")]),e._v(" - VS Code激活事件参考")],1)])}),[],!1,null,null,null);t.default=n.exports}}]);