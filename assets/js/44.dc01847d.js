(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{289:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"调试器插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试器插件"}},[t._v("#")]),t._v(" 调试器插件")]),t._v(" "),a("p",[t._v("VS Code已经内置了一套通用的用户界面，插件作者能够通过VS Code的调试架构轻松将已有的调试器整合进来。")]),t._v(" "),a("p",[t._v("VS Code已经内置了一个"),a("a",{attrs:{href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),a("OutboundLink")],1),t._v("调试器插件，它将成为你学习VS Code调试器特性的绝佳搭档。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debug-features.png",alt:"VS Code调试功能"}})]),t._v(" "),a("p",[t._v("上面的截图展示了以下调试功能：")]),t._v(" "),a("ol",[a("li",[t._v("管理调试器配置")]),t._v(" "),a("li",[t._v("开始、停止、步进等调试操作")]),t._v(" "),a("li",[t._v("源、函数、条件断点、行断点和记录点")]),t._v(" "),a("li",[t._v("支持多线程和多进程的调用栈")]),t._v(" "),a("li",[t._v("在"),a("em",[t._v("视图")]),t._v("中浏览复杂的数据，鼠标悬停在数据上可以看到更多信息")]),t._v(" "),a("li",[t._v("鼠标悬停在源代码中可以看到变量的值")]),t._v(" "),a("li",[t._v("管理watch表达式")]),t._v(" "),a("li",[t._v("调试控制台支持交互操作，如求值、自动补全等")])]),t._v(" "),a("p",[t._v("本节将帮你创建一个任意调试器都可以和VS Code协作的调试器插件。")]),t._v(" "),a("h2",{attrs:{id:"vs-code-中的调试架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-中的调试架构"}},[t._v("#")]),t._v(" VS Code 中的调试架构")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("VS Code基于抽象协议，实现了一个原生（非语言相关的）的调试器UI，它可以和任意后台调试程序通信。通常来讲，调试器不会实现这份协议，因此调试器中需要一些中间件去“适配”这个协议。这个中间件一般而言是一个独立和调试器通信的进程。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debug-arch1.png",alt:"VS Code的调试架构"}})]),t._v(" "),a("p",[t._v("我们将这个中间件称为"),a("strong",[t._v("调试适配器（Debug Adapter）")]),t._v("（简写为"),a("strong",[t._v("DA")]),t._v("），在VS Code和DA之间通信的抽象协议称之为"),a("strong",[t._v("调试适配器协议(Debug Adapter Protocol)")]),t._v(" (简写"),a("strong",[t._v("DAP")]),t._v(")。调试适配器协议独立于VS Code，它有自己的"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/",target:"_blank",rel:"noopener noreferrer"}},[t._v("网站"),a("OutboundLink")],1),t._v("，你在上面可以找到相关的"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("介绍和概述"),a("OutboundLink")],1),t._v("，以及详细的"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/specification",target:"_blank",rel:"noopener noreferrer"}},[t._v("说明书"),a("OutboundLink")],1),t._v("，上面还列出了一些"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/implementors/adapters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("已知实现和支持工具"),a("OutboundLink")],1),t._v("，这份努力背后的故事和动机，我们都记录在了"),a("a",{attrs:{href:"https://code.visualstudio.com/blogs/2018/08/07/debug-adapter-protocol-website#_why-the-need-for-decoupling-with-protocols",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客"),a("OutboundLink")],1),t._v("中。")]),t._v(" "),a("p",[t._v("因为调试适配器独立于VSCode，所以它可用在"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/implementors/tools/",target:"_blank",rel:"noopener noreferrer"}},[t._v("其他开发工具"),a("OutboundLink")],1),t._v("中，它们无需匹配VS Code的插件架构，而只需基于插件和"),a("em",[t._v("发布内容配置")]),t._v("即可。")]),t._v(" "),a("p",[t._v("出于这个原因，VS Code提供了一个配置点"),a("code",[t._v("debuggers")]),t._v("，调试适配器在这里可以配置特定的调试类型（例如：Node.js调试器使用"),a("code",[t._v("node")]),t._v("）。用户只要启动了这个类型的调试适配器会话，VS Code就能加载注册好的调试适配器。")]),t._v(" "),a("p",[t._v("因此调试适配器的最小形式就是声明一个配置，对应调试适配器的实现，这个插件就是调试适配器的装载容器，而且不需要任何多余的代码。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debug-arch2.png",alt:"VS Code调试架构-2"}})]),t._v(" "),a("p",[t._v("一个更贴近现实的调试器插件往往会添加很多配置，如下面的：")]),t._v(" "),a("ul",[a("li",[t._v("调试器支持的语言。VS Code会为这些语言启用UI界面的断点功能")]),t._v(" "),a("li",[t._v("由调试器引入的JSON格式的调试配置属性。VS Code会使用这个格式校验launch.json中的配置，并提供补全功能")]),t._v(" "),a("li",[t._v("首次加载调试时，VS Code自动生成初始launch.json文件")]),t._v(" "),a("li",[t._v("用户可以给launch.json添加的调试配置片段")]),t._v(" "),a("li",[t._v("声明调试配置中可以使用的变量")])]),t._v(" "),a("p",[t._v("想要了解更多相关内容，请查看"),a("a",{attrs:{href:"/extensibility-reference/contribution-points#contributesbreakpoints"}},[t._v("contributes.breakpoints")]),t._v("和"),a("a",{attrs:{href:"/extensibility-reference/contribution-points#contributesdebuggers"}},[t._v("contributes.debuggers")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"模拟调试插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模拟调试插件"}},[t._v("#")]),t._v(" 模拟调试插件")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("由于从头开始创建一个调试适配器太繁琐了，所以我们将从简单的DA(我们已经创建过的"),a("strong",[t._v("入门级调试适配器")]),t._v(")开始。因为它不与真正的调试器进行通信，所以就叫它——"),a("em",[t._v("模拟调试")]),t._v("吧。")]),t._v(" "),a("p",[a("em",[t._v("模拟调试")]),t._v("模拟了调试器功能，支持：")]),t._v(" "),a("ul",[a("li",[t._v("单步调试")]),t._v(" "),a("li",[t._v("跳到下一个断点")]),t._v(" "),a("li",[t._v("断点")]),t._v(" "),a("li",[t._v("异常")]),t._v(" "),a("li",[t._v("访问变量")])]),t._v(" "),a("p",[t._v("在深入了解开发中的"),a("em",[t._v("模拟调试")]),t._v("之前，我们先去VS Code插件市场安装个"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=andreweinand.mock-debug",target:"_blank",rel:"noopener noreferrer"}},[t._v("预构建版本"),a("OutboundLink")],1),t._v("玩一玩，就像下面这样：")]),t._v(" "),a("ul",[a("li",[t._v('打开VS Code的插件面板，输入"mock"并找到'),a("strong",[t._v("Mock Debug")]),t._v("插件")]),t._v(" "),a("li",[a("strong",[t._v("安装")]),t._v("并"),a("strong",[t._v("重启")])])]),t._v(" "),a("p",[t._v("通过如下流程来启动"),a("em",[t._v("模拟调试")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("新建一个空的文件夹"),a("code",[t._v("mock test")]),t._v("并在VS Code中打开")]),t._v(" "),a("li",[t._v("创建一个"),a("code",[t._v("readme.md")]),t._v("，在里面随便写点什么东西")]),t._v(" "),a("li",[t._v("切换到"),a("strong",[t._v("调试")]),t._v("视图，点一下"),a("strong",[t._v("齿轮图标")])]),t._v(" "),a("li",[t._v('VS Code会让你选择一个"环境"，并将其作为默认的启动配置。这里选择"Mock Debug"。')]),t._v(" "),a("li",[t._v("点击绿色的"),a("strong",[t._v("开始")]),t._v("按钮，然后开始调试")])]),t._v(" "),a("p",[t._v("至此，一个调试会话就开始了，你可以在"),a("code",[t._v("readme.md")]),t._v("文件中进行单步调试、打断点。如果某一行出现异常则会跳进该异常。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/mock-debug.gif",alt:"模拟运行调试工具"}})]),t._v(" "),a("p",[t._v("在使用"),a("em",[t._v("模拟调试")]),t._v("之前，我们建议你卸载掉"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=andreweinand.mock-debug",target:"_blank",rel:"noopener noreferrer"}},[t._v("预构建版本"),a("OutboundLink")],1),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("切换到Extensions视图，然后单击"),a("em",[t._v("模拟调试")]),t._v("插件的齿轮图标")]),t._v(" "),a("li",[t._v("卸载该插件并重启VS Code")])]),t._v(" "),a("h2",{attrs:{id:"开发环境配置模拟调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发环境配置模拟调试"}},[t._v("#")]),t._v(" 开发环境配置模拟调试")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("现在让我们下载Mock Debug的源码，然后用VS Code进行开发吧：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/Microsoft/vscode-mock-debug.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" vscode-mock-debug\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("用VS Code打开"),a("code",[t._v("vscode-mock-debug")]),t._v("项目")]),t._v(" "),a("p",[t._v("我们的项目里面有什么呢？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("package.json")]),t._v("是mock-debug插件的配置清单：\n"),a("ul",[a("li",[t._v("里面是mock-debug插件的"),a("em",[t._v("发布内容配置")]),t._v("清单")]),t._v(" "),a("li",[a("code",[t._v("compile")]),t._v("和"),a("code",[t._v("watch")]),t._v("脚本会将Typescript源码编译到"),a("code",[t._v("out")]),t._v("文件夹中，然后"),a("code",[t._v("watch")]),t._v("脚本会追踪源码每个细微的修改")]),t._v(" "),a("li",[a("code",[t._v("vscode-debugprotocol")]),t._v("，"),a("code",[t._v("vscode-debugadapter")]),t._v("和"),a("code",[t._v("vscode-debugadapter-testsupport")]),t._v("npm依赖包简化了基于node的调试适配器开发工作")])])]),t._v(" "),a("li",[a("code",[t._v("src/mockRuntime.ts")]),t._v("是一个"),a("strong",[t._v("模拟的")]),t._v("运行时，仅仅包含一些简单的调试API")]),t._v(" "),a("li",[a("code",[t._v("src/mockDebug.ts")]),t._v("是我们的主要代码，是它将"),a("em",[t._v("运行时")]),t._v("适配到"),a("strong",[t._v("调试适配器")]),t._v("上。你可以在里面找到各种处理DAP请求的方式。")]),t._v(" "),a("li",[t._v("调试插件实现于调试适配器，所以你可以完全不使用创建普通插件的代码（比如：原来插件的代码运行在扩展主机环境中），但是mock-debug还是有个小小的"),a("code",[t._v("src/extension.ts")]),t._v("，这份代码里面阐释了调试器插件中"),a("em",[t._v("插件")]),t._v("部分的代码可以做些什么。")])]),t._v(" "),a("p",[t._v("现在构建项目，然后加载Mock Debug插件。选择"),a("strong",[t._v("调试侧边栏")]),t._v("，加载 "),a("strong",[t._v("Extension")]),t._v(" 配置，然后按下"),a("code",[t._v("F5")]),t._v("。接下来，会启动插件的Typescript编译工作，将转换后的代码输出到"),a("code",[t._v("out")]),t._v("文件夹中，然后进行全量编译，再接着，"),a("em",[t._v("watcher")]),t._v("任务会启动以便侦听你的改动。")]),t._v(" "),a("p",[t._v('代码编译完成后，带有"[Extension Development Host]"（中文环境下是"[扩展开发主机]"）VS Code新窗口会自动打开，Mock Debug插件就运行在调试模式中了。在这个窗口中，打开'),a("code",[t._v("mock test")]),t._v("项目，打开里面的"),a("code",[t._v("readme.md")]),t._v("，然后直接按下"),a("kbd",[t._v("F5")]),t._v("启动调试会话，现在你就可以调试了！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debug-mock-session.png",alt:"模拟调试会话"}})]),t._v(" "),a("p",[t._v("因为的你插件运行在 "),a("em",[t._v("调试模式")]),t._v(" 中，所以你能在"),a("code",[t._v("src/extension.ts")]),t._v("里面打断点，不过就如上文所说，这个插件关于"),a("em",[t._v("插件")]),t._v("本身的代码是没有多少的，最有意思的代码运行在调试适配器里，它是一个独立的进程。")]),t._v(" "),a("p",[t._v("要想调试调试适配器本身，我们需要把它运行在调试模式里。最简单的办法就是将调试适配器以"),a("em",[t._v("服务器模式")]),t._v("运行，然后配置VS Code去连接它。在你的vscode-mock-debug项目中，重新在打开的调试侧边栏的配置下拉菜单中选择"),a("em",[t._v("Server")]),t._v("配置，按下旁边的绿色开始按钮。")]),t._v(" "),a("p",[t._v("因为我们已经启动了一个调试会话，所以VS Code 调试器UI现在会进入 "),a("em",[t._v("多会话")]),t._v(" 模式，在**调用栈（CALL STACK）**视图中你现在可以看到2个调试会话—— "),a("strong",[t._v("Extension")]),t._v(" 和 "),a("strong",[t._v("Server")]),t._v(" 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debugger-extension-server.png",alt:"调试插件和服务器"}})]),t._v(" "),a("p",[t._v("现在我们可以同时调试插件和DA（调试适配器）了。到我们目前这一步还有个更快的方式，启动调试时选择"),a("strong",[t._v("Extension + Server")]),t._v("配置就会自动加载这两个会话。")]),t._v(" "),a("p",[t._v("另外，调试插件和调试适配器更简单的方式会在"),a("a",{attrs:{href:"#%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%99%A8%E6%8F%92%E4%BB%B6%E7%9A%84%E5%85%B6%E4%BB%96%E6%96%B9%E5%BC%8F"}},[t._v("下面")]),t._v("说明。")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("src/mockDebug.ts")]),t._v("中的"),a("code",[t._v("launchRequest(...)")]),t._v("最开始的地方打上断点，然后最后一步则是在你的mock test启动配置中添加"),a("code",[t._v("debugServer")]),t._v("属性和对应的端口值"),a("code",[t._v("4711")]),t._v("就完成了调试器和调试适配器的连接。")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/readme.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debugServer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4711")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("如果你现在就加载这个调试配置，调试适配器不会以分离的进程启动，而是直接连接到已经存在的本地服务器端口4711上。现在你可以在"),a("code",[t._v("launchRequest")]),t._v("打断点了。")]),t._v(" "),a("p",[t._v("经过这样一连串的配置，你终于可以轻松地编辑、编译和调试Mock Debug插件了。")]),t._v(" "),a("p",[t._v("但是好戏才刚刚开始：你需要替换"),a("code",[t._v("src/mockDebug.ts")]),t._v("和"),a("code",[t._v("src/mockRuntime.ts")]),t._v("的中的调试适配器代码，让它可以和“真正的”调试器或者运行时通信。这项工作涉及到理解和实现调试适配器协议。")]),t._v(" "),a("p",[t._v("更多内容请查看"),a("a",{attrs:{href:"https://microsoft.github.io/debug-adapter-protocol/overview#How_it_works",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"剖析调试器插件的package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剖析调试器插件的package-json"}},[t._v("#")]),t._v(" 剖析调试器插件的package.json")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("除了提供调试适配的特定实现之外，调试器插件还需要一个配置各种各样和调试相关的"),a("code",[t._v("package.json")]),t._v("。")]),t._v(" "),a("p",[t._v("所以下面我们进一步看看Mock Debug的"),a("code",[t._v("package.json")]),t._v(".")]),t._v(" "),a("p",[t._v("就像一般的VS Code插件，"),a("code",[t._v("package.json")]),t._v("声明了一些基础信息，如插件的"),a("strong",[t._v("name")]),t._v(" ，"),a("strong",[t._v("publisher")]),t._v("，"),a("strong",[t._v("version")]),t._v("等。其中配置"),a("strong",[t._v("categories")]),t._v("字段可以让你的插件更容易在插件市场中被其他人发现。")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock-debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"displayName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mock Debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.24.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publisher"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starter extension for developing debug adapters for VS Code."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"author"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"email"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"engines"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.17.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^7.9.0"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"icon"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"images/mock-debug-icon.png"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"categories"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Debuggers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"breakpoints"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"language"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"markdown"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mock Debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./out/mockDebug.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurationAttributes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Absolute path to a text file."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/${command:AskForProgramName}"')]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boolean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatically stop after launch."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"initialConfigurations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ask for file name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/${command:AskForProgramName}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurationSnippets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mock Debug: Launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A new configuration for launching a mock debug program"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${2:Launch Program}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^\\"\\\\${workspaceFolder}/${1:Program}\\""')]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"variables"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"AskForProgramName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extension.mock-debug.getProgramName"')]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"activationEvents"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onDebug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onCommand:extension.mock-debug.getProgramName"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br")])]),a("p",[t._v("现在我们来看看调试器插件中的"),a("code",[t._v("contributes")]),t._v("部分。")]),t._v(" "),a("p",[t._v("首先，"),a("strong",[t._v("breakpoints")]),t._v("配置部分列出了可以使用断点的语言列表，没有这个配置的话，就不可能在 Markdown文件中设置断点了。")]),t._v(" "),a("p",[t._v("接下来是"),a("strong",[t._v("debuggers")]),t._v("部分，这里引入了一个类型是"),a("code",[t._v("mock")]),t._v("的调试器，用户可以在调试器加载配置中引用这个类型。可选属性"),a("strong",[t._v("label")]),t._v("是这个调试器的名字，它会显示在UI上。")]),t._v(" "),a("p",[t._v("因为调试器插件使用了调试适配器，所以它的的关联路径得通过"),a("strong",[t._v("program")]),t._v("属性配置。为了保证插件的自包含性（self-contained），这个应用必须在我们的插件文件夹中。按惯例，我们将这个应用放在"),a("code",[t._v("out")]),t._v("或者"),a("code",[t._v("bin")]),t._v("中，当然你也可以使用其他名称的文件夹存放。")]),t._v(" "),a("p",[t._v("因为VS Code运行在不同的平台上，我们需要确保DA程序也能够支持不同的平台。对于这点，我们提供了下列选项：")]),t._v(" "),a("ol",[a("li",[t._v("如果程序在平台上的实现都是各自独立的，比如：这个程序的运行时支持所有平台，你可以在"),a("strong",[t._v("runtime")]),t._v("属性中指明。\n到目前为止，VS Code支持"),a("code",[t._v("node")]),t._v("和"),a("code",[t._v("moni")]),t._v("运行时，我们的Mock Debug就使用了这个方式。")]),t._v(" "),a("li",[t._v("如果你的DA在不同的平台上对应着不同的可执行程序，那么你可以这样使用"),a("strong",[t._v("program")]),t._v("属性：")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gdb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"windows"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.exe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"osx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linux"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("组合上面两种方式也是可以的。下面的例子实现了在macOS和Linux上使用同一个mono应用，但是Windows上就不是。")])]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/monoDebug.exe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"osx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linux"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[a("strong",[t._v("configurationAttributes")]),t._v("声明了这个调试器的"),a("code",[t._v("launch.json")]),t._v("中的属性可以使用的协议。这个协议用于校验"),a("code",[t._v("launch.json")]),t._v("，同时支持编辑加载配置时的智能补全和悬停帮助。")]),t._v(" "),a("p",[a("strong",[t._v("initialConfigurations")]),t._v("定义了这个调试器的初始"),a("code",[t._v("launch.json")]),t._v("。当一个项目没有"),a("code",[t._v("launch.json")]),t._v("，然后用户打开了调试会话时，就会使用这个启动配置。然后VS Code会让用户选择一个调试环境，接着再创建对应的"),a("code",[t._v("launch.json")]),t._v("：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/extension-guides/images/debugger-extension/debug-init-config.png",alt:"调试速选框"}})]),t._v(" "),a("p",[t._v("除了在"),a("code",[t._v("package.json")]),t._v("中静态定义"),a("code",[t._v("launch.json")]),t._v("的初始内容，你还可以使用"),a("code",[t._v("DebugConfigurationProvider")]),t._v("动态注入初始配置内容（详情见下"),a("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8DebugConfigurationProvider"}},[t._v("使用DebugConfigurationProvider")]),t._v("）。")]),t._v(" "),a("p",[a("strong",[t._v("configurationSnippets")]),t._v("定义了编辑"),a("code",[t._v("launch.json")]),t._v("会为用户呈现的代码补全提示。同样，按约定"),a("code",[t._v("label")]),t._v("属性定义了调试环境的名称，所以当大量补全提示出现的时候，用户才能一眼认出自己想要的那个。")]),t._v(" "),a("p",[a("strong",[t._v("variables")]),t._v("配置，将“变量”绑定到了“命令”上。这些变量会出现在加载配置（launch.json）中，用法是**${command:xyz}**，调试会话启动后，其中的值会被命令中的返回值替换。")]),t._v(" "),a("p",[a("em",[t._v("命令")]),t._v("实现在插件（而不是调试适配器）中，它可以由一句简单的表达式实现，也可以复杂到基于插件API和UI特性实现。Mock Debug将变量"),a("code",[t._v("AskForProgramName")]),t._v("绑定到了命令"),a("code",[t._v("extension.mock-debug.getProgramName")]),t._v("，这个命令的"),a("a",{attrs:{href:"https://github.com/Microsoft/vscode-mock-debug/blob/606454ff3bd669867a38d9b2dc7b348d324a3f6b/src/extension.ts#L21-L26",target:"_blank",rel:"noopener noreferrer"}},[t._v("实现"),a("OutboundLink")],1),t._v("在"),a("code",[t._v("src/extension.ts")]),t._v("中，代码中的"),a("code",[t._v("showInputBox")]),t._v("允许用户为程序命名：")]),t._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[t._v("vscode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerCommand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'extension.mock-debug.getProgramName'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vscode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInputBox")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tplaceHolder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please enter the name of a markdown file in the workspace folder'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tvalue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'readme.md'")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("现在加载配置（launch.json）中可以使用**${command:AskForProgramName}**中的值（文本类型）了。")]),t._v(" "),a("h2",{attrs:{id:"使用debugconfigurationprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用debugconfigurationprovider"}},[t._v("#")]),t._v(" 使用DebugConfigurationProvider")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("如果你觉得"),a("code",[t._v("package.json")]),t._v("中和调试相关的发布内容配置不够你用，"),a("code",[t._v("DebugConfigurationProvider")]),t._v("可以动态控制调试插件下列方面的内容：")]),t._v(" "),a("ul",[a("li",[t._v("动态生成launch.json中的配置。比如：根据工作区的信息生成一些配置。")]),t._v(" "),a("li",[t._v("在启动新的调试会话前，解析（或修改）加载配置。有了这个功能，你可以根据工作区的不同填入对应的配置默认值。")])]),t._v(" "),a("p",[a("code",[t._v("src/extension.ts")]),t._v("中的"),a("code",[t._v("MockConfigurationProvider")]),t._v("实现了"),a("code",[t._v("resolveDebugConfiguration")]),t._v("，它会检测调试会话启动时是不是还没有launch.json文件，而且Markdown文件已经打开了。这种场景非常常见，用户已经打开了文件，他想要立刻启动调试而且不想要搞任何配置。")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("vscode.debug.registerDebugConfigurationProvider")]),t._v("注册"),a("em",[t._v("调试配置供应器函数")]),t._v("，它一般在插件的"),a("code",[t._v("active")]),t._v("函数中。"),a("code",[t._v("DebugConfigurationProvider")]),t._v("需要尽早注册，一旦调试功能被使用到了，插件就应该启动。我们通过"),a("code",[t._v("package.json")]),t._v("中的"),a("code",[t._v("onDebug")]),t._v("事件轻松搞定这个需求：")]),t._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"activationEvents"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onDebug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("在低开销的插件启动时（启动时不会花太多时间），这个机制会如预期工作。但是如果插件的启动开销较大（比如启动一个语言服务器），那么"),a("code",[t._v("onDebug")]),t._v("事件可能会对其他调试插件产生副作用，因为"),a("code",[t._v("onDebug")]),t._v("事件已经激活了其他插件，但是其他插件因为阻塞还来不及接收到具体的调试类型。")]),t._v(" "),a("p",[t._v("对于高开销的调试插件来说，更好的方法就是使用粒度更细的 激活事件：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("onDebugInitialConfigurations")]),t._v("会在"),a("code",[t._v("DebugConfigurationProvider")]),t._v("的"),a("code",[t._v("provideDebugConfigurations")]),t._v("调用前触发")]),t._v(" "),a("li",[a("code",[t._v("onDebugResolve:type")]),t._v("会在"),a("code",[t._v("DebugConfigurationProvider")]),t._v("的"),a("code",[t._v("resolveDebugConfiguration")]),t._v("取得具体的调试类型前触发")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("首要原则")]),t._v(" "),a("p",[t._v("如果调试插件的开销很小，就用"),a("code",[t._v("onDebug")]),t._v("，根据"),a("code",[t._v("DebugConfigurationProvider")]),t._v("是否实现了"),a("code",[t._v("provideDebugConfigurations")]),t._v("或"),a("code",[t._v("resolveDebugConfiguration")]),t._v("，然后在对应的"),a("code",[t._v("onDebugInitialConfigurations")]),t._v("或者"),a("code",[t._v("onDebugResolve")]),t._v("中处理。")])]),t._v(" "),a("h2",{attrs:{id:"发布调试器插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布调试器插件"}},[t._v("#")]),t._v(" 发布调试器插件")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("通过下面的步骤将你的调试适配器发布到市场上：")]),t._v(" "),a("ul",[a("li",[t._v("更新"),a("code",[t._v("package.json")]),t._v("中的发布配置内容表明你调试适配器的功能和目标")]),t._v(" "),a("li",[t._v("参考"),a("a",{attrs:{href:"/working-with-extensions/publish-extension"}},[t._v("发布插件")]),t._v("部分然后将你的插件上传到市场上")])]),t._v(" "),a("h2",{attrs:{id:"开发调试器插件的其他方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发调试器插件的其他方式"}},[t._v("#")]),t._v(" 开发调试器插件的其他方式")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("如我们所见，开发一个调试插件涉及到"),a("em",[t._v("一个普通插件")]),t._v("再加上一个调试适配器，它们分别运行在不同的会话中。VS Code支持这样的实现，但是简单的办法是还是把"),a("em",[t._v("插件")]),t._v("和调试适配器用一个程序实现，这样你就可以在一个调试会话中同时调试了。")]),t._v(" "),a("p",[t._v("实际上，只要你的调试适配器是基于Typescript/Javascript实现的，这个方法就都是可行的。基本的思路是把调试适配器实现为一个服务器，让"),a("em",[t._v("插件")]),t._v("去启动这个服务，再让VS Code连接上去，这样你就不用每个调试会话都启动一个新的调试适配器了。")]),t._v(" "),a("p",[t._v("Mock Debug的例子阐述了一个"),a("a",{attrs:{href:"https://github.com/Microsoft/vscode-mock-debug/blob/6a2ef01b95bb22cdf55683f4d616cad501051510/src/extension.ts#L74-L98",target:"_blank",rel:"noopener noreferrer"}},[t._v("DebugAdapterDescriptorFactory"),a("OutboundLink")],1),t._v("可以怎样创建和"),a("a",{attrs:{href:"https://github.com/Microsoft/vscode-mock-debug/blob/6a2ef01b95bb22cdf55683f4d616cad501051510/src/extension.ts#L32-L36",target:"_blank",rel:"noopener noreferrer"}},[t._v("注册"),a("OutboundLink")],1),t._v("一个基于服务器的调试适配器。通过将编译时的"),a("a",{attrs:{href:"https://github.com/Microsoft/vscode-mock-debug/blob/6a2ef01b95bb22cdf55683f4d616cad501051510/src/extension.ts#L17",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("EMBED_DEBUG_ADAPTER")]),a("OutboundLink")],1),t._v("配置设置为true启用这个特性。现在如果你用"),a("strong",[t._v("F5")]),t._v("启动调试，你就不仅仅是在插件开发主机中打了断点，你也同时在调试适配器中打了同样的断点。")])])}),[],!1,null,null,null);s.default=e.exports}}]);