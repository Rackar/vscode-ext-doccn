(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{280:function(e,t,r){"use strict";r.r(t);var a=r(17),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("p",[e._v("VS Code通过语言插件可以为各式各样的编程语言提供智能的编辑体验。VS Code并不含内置语言支持，不过提供了一整套支持富文本特性的API。\n比如，"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/html",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTML"),r("OutboundLink")],1),e._v("插件是一个可以为VS Code中的HTML文件提供语法高亮的插件。\n类似的，当你输入"),r("code",[e._v("console.")]),e._v("时，智能补全会提示"),r("code",[e._v("log")]),e._v("，这是"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-language-features",target:"_blank",rel:"noopener noreferrer"}},[e._v("Typescript Language Features"),r("OutboundLink")],1),e._v("插件提供的。")]),e._v(" "),r("p",[e._v("语言特性大致可以分为下面两种：")]),e._v(" "),r("h2",{attrs:{id:"声明式语言特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#声明式语言特性"}},[e._v("#")]),e._v(" 声明式语言特性")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("定义在配置文件的语言功能称之为"),r("em",[e._v("编程式语言特性")]),e._v("，比如，"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/html",target:"_blank",rel:"noopener noreferrer"}},[e._v("html"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/css",target:"_blank",rel:"noopener noreferrer"}},[e._v("css"),r("OutboundLink")],1),e._v("和"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-basics",target:"_blank",rel:"noopener noreferrer"}},[e._v("typescript-基础支持"),r("OutboundLink")],1),e._v("插件都打包在了VS Code中，所以提供了下列声明式语言特性：")]),e._v(" "),r("ul",[r("li",[e._v("语法高亮")]),e._v(" "),r("li",[e._v("代码片段补全")]),e._v(" "),r("li",[e._v("括号匹配")]),e._v(" "),r("li",[e._v("自动闭合括号")]),e._v(" "),r("li",[e._v("括号识别")]),e._v(" "),r("li",[e._v("启动、关闭注释")]),e._v(" "),r("li",[e._v("自动缩进")]),e._v(" "),r("li",[e._v("代码折叠")])]),e._v(" "),r("p",[e._v("我们提供了3个指南供你开发语言插件的声明式特性：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/language-extensions/syntax-highlight-guide"}},[e._v("语法高亮指南")]),e._v("：VS Code 使用TextMate语法来高亮代码。这个指南将教你用简单的TextMate语法开发一个VS Code插件。")]),e._v(" "),r("li",[r("a",{attrs:{href:"/language-extensions/snippet-guide"}},[e._v("代码片段补全指南")]),e._v("： 这个指南教你怎么把代码片段打包进插件中。")]),e._v(" "),r("li",[r("a",{attrs:{href:"/language-extensions/language-configuration-guide"}},[e._v("语言配置指南")]),e._v("：VS Code允许插件为任何编程语言定义 "),r("strong",[e._v("语言配置")]),e._v("。这个文件控制着基本的编辑功能，如开闭注释、括号匹配/识别，和(基础)代码折叠。")])]),e._v(" "),r("h2",{attrs:{id:"编程式语言特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程式语言特性"}},[e._v("#")]),e._v(" 编程式语言特性")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("编程式语言特性包括自动补全、错误检查和跳转到定义。这些功能一般通过"),r("em",[e._v("语言服务器")]),e._v("驱动，这个服务器会分析你的项目，然后提供对应的功能。最好的例子就是打包在VS Code中的"),r("a",{attrs:{href:"https://github.com/Microsoft/vscode/tree/master/extensions/typescript-language-features",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("typescript-language-features")]),r("OutboundLink")],1),e._v("插件，它利用"),r("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/wiki/Using-the-Language-Service-API",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript Language Service"),r("OutboundLink")],1),e._v("提供了诸如下面罗列的编程式语言特性：")]),e._v(" "),r("ul",[r("li",[e._v("悬停信息（"),r("a",{attrs:{href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerHoverProvider",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode.languages.registerHoverProvider"),r("OutboundLink")],1),e._v("）")]),e._v(" "),r("li",[e._v("自动补全（"),r("a",{attrs:{href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDefinitionProvider",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode.languages.registerCompletionItemProvider"),r("OutboundLink")],1),e._v("）")]),e._v(" "),r("li",[e._v("转跳到定义（"),r("a",{attrs:{href:"https://code.visualstudio.com/api/references/vscode-api#languages.registerDefinitionProvider",target:"_blank",rel:"noopener noreferrer"}},[e._v("vscode.languages.registerDefinitionProvider"),r("OutboundLink")],1),e._v("）")]),e._v(" "),r("li",[e._v("错误检查")]),e._v(" "),r("li",[e._v("格式化")]),e._v(" "),r("li",[e._v("重构")]),e._v(" "),r("li",[e._v("代码折叠")])]),e._v(" "),r("p",[e._v("下面是"),r("a",{attrs:{href:"/language-extensions/programmatic-language-features"}},[e._v("编程式语言特性")]),e._v("的完整列表。")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/overview/multi-ls.png",alt:"multi-ls"}})]),e._v(" "),r("h2",{attrs:{id:"语言服务器协议（language-server-protocol）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#语言服务器协议（language-server-protocol）"}},[e._v("#")]),e._v(" 语言服务器协议（Language Server Protocol）")]),e._v(" "),r("hr"),e._v(" "),r("p",[r("a",{attrs:{href:"https://microsoft.github.io/language-server-protocol/",target:"_blank",rel:"noopener noreferrer"}},[e._v("语言服务器协议"),r("OutboundLink")],1),e._v("将语言服务器（一个静态代码分析工具）和语言客户端（一般就是源代码）之间的通信进行了标准化，这样一来插件开发者就可以只写一次代码分析程序，然后在多个编辑器中重用了。")]),e._v(" "),r("p",[e._v("在"),r("a",{attrs:{href:"/language-extensions/programmatic-language-features"}},[e._v("编程式语言特性")]),e._v("列表中，你可以找到所有VS Code的语言特性，以及它和"),r("a",{attrs:{href:"https://microsoft.github.io/language-server-protocol/specification",target:"_blank",rel:"noopener noreferrer"}},[e._v("语言服务器协议规格"),r("OutboundLink")],1),e._v("之间的映射关系。")]),e._v(" "),r("p",[e._v("我们提供了一个非常详尽的指南，里面会告诉你怎么实现一个语言服务器插件：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"/language-extensions/language-server-extension-guide"}},[e._v("语言服务器插件指南")])])]),e._v(" "),r("p",[r("img",{attrs:{src:"https://media.githubusercontent.com/media/Microsoft/vscode-docs/master/api/language-extensions/images/overview/multi-editor.png",alt:"multi-editor"}})]),e._v(" "),r("h2",{attrs:{id:"特殊功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#特殊功能"}},[e._v("#")]),e._v(" 特殊功能")]),e._v(" "),r("hr"),e._v(" "),r("h4",{attrs:{id:"多目录工作区支持"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多目录工作区支持"}},[e._v("#")]),e._v(" 多目录工作区支持")]),e._v(" "),r("p",[e._v("当用户打开了一个"),r("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/multi-root-workspaces",target:"_blank",rel:"noopener noreferrer"}},[e._v("多目录工作区"),r("OutboundLink")],1),e._v("，你可能需要将你的语言服务器插件做相应的调整。这个主题探讨了几种多目录工作区的语言服务器的实现方法。\n（译者注：官方可能尚未完成这个部分的文档）")]),e._v(" "),r("h4",{attrs:{id:"嵌入式语言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#嵌入式语言"}},[e._v("#")]),e._v(" 嵌入式语言")]),e._v(" "),r("p",[e._v("嵌入式语言在web开发中是非常常见的，比如HTML中的CSS/JS，JS/TS中的GraphQL。这个主题探讨了针对嵌入语言实现VS Code语言特性的各种方法。\n（译者注：官方可能尚未完成这个部分的文档）")])])}),[],!1,null,null,null);t.default=s.exports}}]);